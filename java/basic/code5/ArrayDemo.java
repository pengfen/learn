package com.test;
/*
 * 数组 存储同一种数据类型的多个元素的容器
 * 
 * 定义格式
 *    数据类型[] 数组名 (推荐)
 *    数据类型 数组名[]
 *    
 * 举例
 *    int[] a; 定义一个int类型的数组a变量
 *    int a[]; 定义一个int类型的a数组变量
 *    
 * 注意 效果可以认为是一样的 都是定义一个int数组 但是念法上有些小区别 推荐使用第一种
 * 
 * 如何对数组进行初始化呢
 *    何谓初始化呢 就是为数组开辟内存空间 并为每个数组元素赋予值
 *    有几种方式呢
 *       动态初始化 只指定长度 由系统给出初始化值
 *       静态初始化 给出初始化值 由系统决定长度
 *       
 * 动态初始化的格式
 *    数据类型[] 数组名 = new 数据类型[数组长度];
 *    
 *    举例 int[] arr = new int[3];
 *    
 * 如何获取数组中的元素呢
 *    通过: 数组名[索引]
 *         索引其实就是每个元素的编号 从0开始 最大索引是数组的长度-1
 */
public class ArrayDemo {
	public static void main(String[] args) {
		//定义一个数组
		//int[] a;
		//可能尚未初始化变量a
		//System.out.println(a);
		
		int[] arr = new int[3];
		/*
			左边：
				int:说明数组中的元素的数据类型是int类型
				[]:说明这是一个数组
				arr:是数组的名称
				
			右边：
				new:为数组分配内存空间。
				int:说明数组中的元素的数据类型是int类型
				[]:说明这是一个数组
				3:数组长度，其实也就是数组中元素的个数
		*/
		
		System.out.println(arr); //[I@175078b 地址值。
		//我要地址值没有意义啊，我就要数据值，怎么办呢?
		//不用担心，java为你考虑到了。
		//其实数组中的每个元素都是有编号的，并且是从0开始。最大编号是数组的长度-1。
		//用数组名和编号的配合就可以获取数组中的指定编号的元素。这个编号的专业叫法：索引
		//通过数组名访问数据的格式是：数组名[索引];
		System.out.println(arr[0]);
		System.out.println(arr[1]);
		System.out.println(arr[2]);
	}
}

/*
 * Java程序为了提高程序的效率 就对数据进行了不同空间的分配
 * 具体的是划分散主义为了如下5个内存空间
 * 栈 存放的是局部变量
 * 堆 存放的是所有new出来的东西
 * 方法区: (面向对象部分详细讲解)
 * 本地方法区: (和系统相关)
 * 寄存器: (CPU使用)
 * 
 * 局部变量: 在方法定义中或者方法声明上的变量都称为局部变量
 * int[] arr = new int[3];
 * System.out.println(arr); // 地址值
 * 
 * System.out.println(arr[0]); // 0
 * System.out.println(arr[1]); // 0
 * System.out.println(arr[2]); // 0
 * 
 * 栈内存的数据用完就释放掉
 * {
 *     int a = 100;
 *     System.out.println(a);
 * }
 * 
 * 堆内存的特点
 * 每一个new出来的东西都有地址值
 * 每个变量都有默认值
 *    byte,short,int,long 0
 *    float,double 0.0
 *    char '\u0000' 空字符串
 *    boolean false
 *    引用类型 null
 * 使用完毕就变成了垃圾 但是并没有立即回收 会在垃圾回收器空闲的时候回收
 */
